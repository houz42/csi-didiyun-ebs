{{ range .Values.nodePlugins }}
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: "{{ include "csi-didiyun-ebs.name" $ }}-node-{{ .name }}"
  namespace: {{ $.Release.Namespace}}
  labels:
    app.kubernetes.io/component: "node-plugin-{{ .name }}"
    {{- include "csi-didiyun-ebs.labels" $ | nindent 4 }}
  {{- with .annotations }}
  annotations:
    {{ toYaml . | nindent 4 }}
  {{- end }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: "node-plugin-{{ .name }}"
      {{- include "csi-didiyun-ebs.selectorLabels" $ | nindent 6 }}
  template:
    metadata:
      labels:
        app.kubernetes.io/component: "node-plugin-{{ .name }}"
        {{- include "csi-didiyun-ebs.selectorLabels" $ | nindent 8 }}
    spec:
      {{- with .affinity }}
      affinity:
        {{ toYaml . | nindent 8 }}
      {{- end }}
      serviceAccount: {{ include "csi-didiyun-ebs.name" $ }}-node
      {{- with .nodeSelector }}
      nodeSelector:
        {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .tolerations }}
      tolerations:
        {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.config.imagePullSecrets }}
      imagePullSecrets:
        {{ toYaml . | nindent 8 }}
      {{- end }}

      containers:
      - name: node-driver-registrar
        image: "{{ $.Values.registrar.image.name }}:{{ $.Values.registrar.image.tag }}"
        imagePullPolicy: {{ $.Values.registrar.image.pullPolicy }}
        args:
        - --v=5
        - --csi-address=/csi/csi.sock
        - --kubelet-registration-path=/var/lib/kubelet/plugins/didiyun-ebs.csi.supremind.com/csi.sock
        env:
        - name: KUBE_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: MAX_VOLUMES_PER_NODE
          value: {{ quote $.Values.config.maxVolumesPerNode }}
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/sh
              - -c
              - rm -f /registration/didiyun-ebs.csi.supremind.com-reg.sock
        {{ with $.Values.registrar.resources }}
        resources:
          {{ toYaml . | nindent 10 }}
        {{- end }}
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /csi
          name: socket-dir
        - mountPath: /registration
          name: registration-dir

      - name: ebs
        image: "{{ $.Values.driver.image.name }}:{{ $.Values.driver.image.tag }}"
        imagePullPolicy: {{ $.Values.driver.image.pullPolicy }}
        args:
        - --v=5
        - --endpoint=$(CSI_ENDPOINT)
        - --nodeid=$(KUBE_NODE_NAME)
        - "--regionid={{ .region }}"
        - "--zoneid={{ .zone }}"
        - --token=$(API_TOKEN)
        env:
        - name: ENABLE_CHECK_DEVICE
          value: "1"
        - name: CSI_ENDPOINT
          value: unix:///csi/csi.sock
        - name: KUBE_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: API_TOKEN
          valueFrom:
            secretKeyRef:
              key: token
              name: {{ include "csi-didiyun-ebs.name" $ }}-api-token
        ports:
        - containerPort: 9898
          name: healthz
          protocol: TCP
        securityContext:
          privileged: true
        {{ with $.Values.registrar.resources }}
        resources:
          {{ toYaml . | nindent 10 }}
        {{- end }}
        volumeMounts:
        - mountPath: /csi
          name: socket-dir
        - mountPath: /var/lib/kubelet/pods
          mountPropagation: Bidirectional
          name: mountpoint-dir
        - mountPath: /var/lib/kubelet/plugins
          mountPropagation: Bidirectional
          name: plugins-dir
        - mountPath: /dev
          mountPropagation: HostToContainer
          name: host-dev
      restartPolicy: Always
      volumes:
      - hostPath:
          path: /var/lib/kubelet/plugins/didiyun-ebs.csi.supremind.com
          type: DirectoryOrCreate
        name: socket-dir
      - hostPath:
          path: /var/lib/kubelet/pods
          type: DirectoryOrCreate
        name: mountpoint-dir
      - hostPath:
          path: /var/lib/kubelet/plugins_registry
          type: Directory
        name: registration-dir
      - hostPath:
          path: /var/lib/kubelet/plugins
          type: Directory
        name: plugins-dir
      - hostPath:
          path: /dev
          type: ""
        name: host-dev
---
{{ end }}
